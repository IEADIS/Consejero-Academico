install.packages("qdap")
install.packages("SnowballC")
install.packages("caret")
install.packages("readr")
install.packages("psych")
install.packages("dplyr")
# install.packages("R.matlab")
install.packages("gmodels")
install.packages("ROCR")
install.packages("e1071")
# install.packages("RTextTools")
install.packages("neuralnet")
install.packages("nnet")
install.packages("syuzhet")
install.packages("mldr")
install.packages("plotly")
install.packages("tokenizers")
install.packages("tidyverse")
install.packages("multiROC")
install.packages("dummies")
install.packages("tidytext")
install.packages("maxent")
install.packages("expm")
install.packages("markovchain")
install.packages("diagram")
install.packages("pracma")
install.packages("sets")
install.packages("kernlab")
install.packages("bnlearn")
install.packages("klaR")
install.packages("qdap")
install.packages("qdap")
install.packages("XML")
install.packages('devtools')
install.packages("qdap")
install.packages("qdap")
install.packages("qdap")
install.packages("plotrix")
install.packages("qdap")
setwd("~/Documents/Consejero-Academico")
expand.grid(size=c(10), decay=c(0.1))
expand.grid(C = c(0.25,0.5,0.75,1))
expand.grid(.decay = c(0.5, 0.1, 1e-2, 1e-4), .size = c(3, 5, 10))
12*5
library(psych)
library(caret)
source("Analisis/R_Scripts/utils.R")
source("Analisis/R_Scripts/models/Classification/classification_utils.R")
source("Analisis/R_Scripts/models/Classification/logistic_regression.R")
source("Analisis/R_Scripts/models/Classification/support_vector.R")
source("Analisis/R_Scripts/models/Classification/neural_network.R")
NOTES = classif_utils.getDataCleanClassDir()
# Only in Linux/Unix Systems - in Windows doesn't work - You should use parallel instead - This library is to parallelize, you can comment it
# Take care of the number of cores
library(doMC)
registerDoMC(cores = 5)
# DATA ADQUIRE
allData <- read.csv(NOTES, header = TRUE)
# FILTER BY SUBJECT
asig.sistemas <- unique(allData[allData$Area.Asignatura %in% c('SISTEMAS'),]$Codigo.Asignatura)
summary(asig.sistemas)
data.asig <- classif_utils.asig.adq(data = allData, asig = "AREM", time.start = 2009, time.end = 2016)
data.asig <- classif_utils.asig.adq(data = allData, asig = "ARSW", time.start = 2009, time.end = 2016)
data.asig <- classif_utils.asig.adq(data = allData, asig = c("ARSW"), time.start = 2009, time.end = 2016)
data.asig <- classif_utils.asig.adq(data = allData, asig = "ARSW", time.start = 2009, time.end = 2016)
c("ARSW", "ARSW", "ARSW", "ARSW", "ARSW", "ARSW", "TEST") %in% "ARSW"
allData$Codigo.Asignatura %in% "ARSW"
sum(allData$Codigo.Asignatura %in% "ARSW")
# DATA ADQUIRE
allData <- read.csv(NOTES, header = TRUE)
summary(allData$Codigo.Asignatura)
sum(allData$Codigo.Asignatura %in% "SPPC")
sum(allData$Codigo.Asignatura %in% "ARSW ")
data.asig <- classif_utils.asig.adq(data = allData, asig = "ARSW ", time.start = 2009, time.end = 2016)
data.trans <- classif_utils.asig.trans(data.asig)
data.part <- classif_utils.asig.part(data.trans)
test.model <- train.nn( data.part$train )
summary(test.model)
test.model$results
